# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'evaluate.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
import sqlite3
conn=sqlite3.connect('TheGameHub.db')
curs=conn.cursor()

class Ui_MainWindow2(object):
    def setupUi(self, MainWindow2):
        MainWindow2.setObjectName("MainWindow2")
        MainWindow2.resize(668, 483)
        font = QtGui.QFont()
        font.setPointSize(10)
        MainWindow2.setFont(font)
        MainWindow2.setStyleSheet("background-color: rgb(178, 222, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow2)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setContentsMargins(20, 20, 20, 6)
        self.gridLayout.setHorizontalSpacing(9)
        self.gridLayout.setVerticalSpacing(14)
        self.gridLayout.setObjectName("gridLayout")
        spacerItem = QtWidgets.QSpacerItem(77, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 1, 3, 1, 1)
        self.select_match = QtWidgets.QComboBox(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.select_match.setFont(font)
        self.select_match.setStyleSheet("background-color: rgb(255, 194, 255);")
        self.select_match.setObjectName("select_match")
        self.select_match.addItem("")
        self.select_match.addItem("")
        self.gridLayout.addWidget(self.select_match, 1, 4, 1, 3)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 2, 0, 1, 7)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 3, 0, 1, 1)
        self.select_team = QtWidgets.QComboBox(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.select_team.setFont(font)
        self.select_team.setStyleSheet("background-color: rgb(255, 194, 255);")
        self.select_team.setObjectName("select_team")
        self.select_team.addItem("")
        self.gridLayout.addWidget(self.select_team, 1, 0, 1, 3)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 3, 6, 1, 1)
        self.players_list = QtWidgets.QListWidget(self.centralwidget)
        self.players_list.setStyleSheet("background-color: rgb(183, 255, 183);")
        self.players_list.setObjectName("players_list")
        self.gridLayout.addWidget(self.players_list, 4, 0, 1, 3)
        self.evaluate_score = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.evaluate_score.setFont(font)
        self.evaluate_score.setStyleSheet("background-color:rgb(99, 200, 81);\n"
"")
        self.evaluate_score.setObjectName("evaluate_score")
        self.gridLayout.addWidget(self.evaluate_score, 4, 3, 1, 3)
        self.total_pts = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.total_pts.setFont(font)
        self.total_pts.setStyleSheet("background-color: rgb(132, 223, 146);")
        self.total_pts.setObjectName("total_pts")
        self.gridLayout.addWidget(self.total_pts, 5, 6, 1, 1)
        self.pts_list = QtWidgets.QListWidget(self.centralwidget)
        self.pts_list.setStyleSheet("background-color: rgb(183, 255, 183);")
        self.pts_list.setObjectName("pts_list")
        self.gridLayout.addWidget(self.pts_list, 4, 6, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(165, 22, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 5, 0, 1, 2)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 5, 2, 1, 3)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem2, 0, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 1, 1, 6)
        self.gridLayout.setColumnStretch(0, 5)
        self.gridLayout.setColumnStretch(1, 5)
        self.gridLayout.setColumnStretch(2, 5)
        self.gridLayout.setColumnStretch(3, 2)
        MainWindow2.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow2)
        self.statusbar.setObjectName("statusbar")
        MainWindow2.setStatusBar(self.statusbar)

        self.get_players()
        self.select_team.activated.connect(self.getTeam)
        self.evaluate_score.clicked.connect(self.score)

        self.retranslateUi(MainWindow2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow2)

    def retranslateUi(self, MainWindow2):
        _translate = QtCore.QCoreApplication.translate
        MainWindow2.setWindowTitle(_translate("MainWindow2", "Evaluate Team"))
        self.select_match.setItemText(0, _translate("MainWindow2", "Select Match"))
        self.select_match.setItemText(1, _translate("MainWindow2", "Match 1"))
        self.label_3.setText(_translate("MainWindow2", "Players"))
        self.select_team.setItemText(0, _translate("MainWindow2", "Select Team"))
        self.label_2.setText(_translate("MainWindow2", "Score"))
        self.evaluate_score.setText(_translate("MainWindow2", "Calculate Score"))
        self.label_4.setText(_translate("MainWindow2", "Total Score:"))
        self.label.setText(_translate("MainWindow2", "Evaluate the performance of your team here:"))

    def string_to_list(self,string):
        items = []
        item = ""
        itemExpected = True
        for char in string[1:]:
            if itemExpected and char not in ["]", ",", "[", "'"]:
                item += char
                
            elif char in [",", "[", "]"]:
                itemExpected = True
                items.append(item)
                item = ""
        i=1
        for txt in items[1:]:
            items[i]=txt[1:]
            i+=1
            if i==12:break
        return items

    def get_players(self):
        curs.execute("SELECT * from Teams")
        rec=curs.fetchall()
        l=len(rec)
        for i in range(0,l):
            row=rec[i]
            team=row[0]
            self.select_team.addItem(team)

    def getTeam(self):
        self.total_pts.setText("")
        self.players_list.clear()
        self.pts_list.clear()
        txt=self.select_team.currentText()
        if txt != "Select Team":
            curs.execute("SELECT Players from Teams WHERE Name='"+txt+"'")
            row=curs.fetchone()                    
            selected = self.string_to_list(row[0])
            self.players_list.addItems(selected)        
        else:
            msg = QMessageBox()
            msg.setWindowTitle("The Game Hub")
            msg.setText("Invalid Selection.")
            msg.setIcon(QMessageBox.Warning)
            x=msg.exec()
                
    def score(self):
        txt=self.select_team.currentText()
        self.pts_list.clear()
        total=int()
        for i in range(self.players_list.count()):
            player=self.players_list.item(i).text()
            cur = conn.execute('SELECT * FROM Match WHERE Player="{}";'.format(player))
            row = cur.fetchone()            
            runs_score=row[1]
            balls_faced=row[2]
            fours=row[3]
            sixes=row[4]
            balls_delivered=row[5]
            overs=int(balls_delivered/6)
            runs_given=row[7]
            wkts=row[8]
            catches=row[9]
            stumping=row[10]
            run_out=row[11]            
            batscore=int(runs_score/2)
            if runs_score>=50 and runs_score<100: batscore+=5
            if runs_score>=100:batscore+=10
            if runs_score>0:
                sr=float(runs_score*100/balls_faced)
                if sr>=80 and sr<100:batscore+=2
                if sr>=100:batscore+=4
            batscore+=fours
            batscore+=2*sixes            
            bowlscore=int(wkts*10)
            if wkts>=3:bowlscore+=5
            if wkts>=5:bowlscore+=10
            if balls_delivered>0:
                er=float(runs_given/overs)
                if er<=2.0:bowlscore+=10
                elif er>2.0 and er<=3.5:bowlscore+=7
                elif er > 3.5 and er <= 4.5:bowlscore+=4
            points=batscore+bowlscore
            points+=10*catches
            points+=10*stumping
            points+=10*run_out
            self.pts_list.addItem(str(points))
            total+=points
        self.total_pts.setText(str(total))
        curs.execute('UPDATE Teams SET Score = "{}" WHERE Name = "{}";'.format(total, txt))
        conn.commit()
        msg2 = QMessageBox()
        msg2.setWindowTitle("The Game Hub")
        msg2.setText("Your Team has scored '{}' points.".format(total))
        msg2.setIcon(QMessageBox.Information)
        z=msg2.exec()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow2 = QtWidgets.QMainWindow()
    ui = Ui_MainWindow2()
    ui.setupUi(MainWindow2)
    MainWindow2.show()
    sys.exit(app.exec_())
